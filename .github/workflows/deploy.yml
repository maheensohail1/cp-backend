name: Build and Deploy Backend

on:
  push:
    branches:
      - master  # Change this to your branch name if needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Match Node.js version in your Dockerfile

      - name: Install dependencies
        run: npm install
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Build Docker image
      #   run: sudo docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest .

      # - name: Push Docker image to Docker Hub
      #   run: sudo docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          BASTION_HOST: ${{ secrets.BASTION_HOST }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "${PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER}@${BASTION_HOST} "ssh -o StrictHostKeyChecking=no -i /home/ubuntu/tf_test.pem ${USER}@${HOST} 'sudo docker stop backend || true && sudo docker rm backend || true && cd /home/ubuntu/cp-backend || true && sudo docker build -t backend . || true && sudo docker run -d -p 5000:5000 --name backend || true && sudo npx prisma migrate deploy'"